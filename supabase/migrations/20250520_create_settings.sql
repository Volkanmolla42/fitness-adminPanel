-- Create settings table
CREATE TABLE IF NOT EXISTS settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    key TEXT NOT NULL UNIQUE,
    value JSONB NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Create time_slots settings
INSERT INTO settings (key, value) VALUES 
('time_slots', '{"slots": ["10:00", "11:30", "13:00", "14:00", "15:30", "17:00", "18:00", "19:00"], "working_hours": {"start": "10:00", "end": "20:00"}}')
ON CONFLICT (key) DO UPDATE SET value = EXCLUDED.value;

-- Create function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger to automatically update updated_at
CREATE TRIGGER update_settings_updated_at
    BEFORE UPDATE ON settings
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Create RLS policies
ALTER TABLE settings ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow read access to all authenticated users"
    ON settings FOR SELECT
    TO authenticated
    USING (true);

CREATE POLICY "Allow write access to all authenticated users"
    ON settings FOR INSERT
    TO authenticated
    WITH CHECK (true);

CREATE POLICY "Allow update access to all authenticated users"
    ON settings FOR UPDATE
    TO authenticated
    USING (true)
    WITH CHECK (true);
